plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.11'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'gwangjang'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	maven { url 'https://google-api-client-libraries.appspot.com/mavenrepo' }
}


ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.projectlombok:lombok:1.18.28'
	runtimeOnly 'com.mysql:mysql-connector-j'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.2'

	implementation 'org.springframework.boot:spring-boot-starter-web'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

//    implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'

	// WebClient
	implementation 'org.springframework.boot:spring-boot-starter-webflux'


	// Feign
	implementation 'io.github.openfeign:feign-httpclient:12.1'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.4'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// 형태소
	implementation 'com.github.shin285:KOMORAN:3.3.4'

	implementation 'org.json:json:20210307'
	implementation 'com.googlecode.json-simple:json-simple:1.1'


	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0' // 사용 가능한 최신 버전으로 업데이트하세요

	//spring batch
	implementation 'org.springframework.boot:spring-boot-starter-batch'

	//youtube
	implementation 'com.google.api-client:google-api-client:1.30.9'
	implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'

	//mapper
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

